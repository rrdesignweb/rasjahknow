---
import Layout from "../layouts/Layout.astro";
import HeroBanner from "../components/HeroBanner.astro";
import { contentfulClient } from "../lib/contentful";
interface MusicPage {
  contentTypeId: "FyMotfR5FPnEC66Zt2wRh";
  fields: {
    title: string;
    subTitle: string;
    heroBanner: {
      fields: {
        file: {
          url: string | undefined;
        };
      };
    };
    content: string;
  };
}

const entry = await contentfulClient.getEntry<MusicPage>(
  "FyMotfR5FPnEC66Zt2wRh"
);

interface MusicItem {
  contentTypeId: "albums";
  fields: {
    embed: string;
  };
  position: number;
}

const entries = await contentfulClient.getEntries<MusicItem>({
  content_type: "albums",
});
---

<Layout title="Music">
  <HeroBanner
    title={entry?.fields?.title}
    description={entry?.fields?.subTitle}
    image={entry?.fields.heroBanner.fields.file?.url}
  />
  <section
    class="w-11/12 md:w-9/12 grid md:grid-cols-2 grid-col-1 gap-2 container mx-auto mt-10 mb-5"
  >
    {
      entries &&
        entries.items
          .sort((a, b) => a.fields.position - b.fields.position)
          .map((item: any, i: number) => {
            return <Fragment key={i} set:html={item?.fields.embed} />;
          })
    }
  </section>
</Layout>

<style is:inline>
  @media only screen and (min-width: 767px) {
    iframe {
      height: 750px;
      width: 100%;
    }
  }
</style>

<script is:inline>
  (function (w, d) {
    var id = "embedly-platform",
      n = "script";
    if (!d.getElementById(id)) {
      w.embedly =
        w.embedly ||
        function () {
          (w.embedly.q = w.embedly.q || []).push(arguments);
        };
      var e = d.createElement(n);
      e.id = id;
      e.async = 1;
      e.src =
        ("https:" === document.location.protocol ? "https" : "http") +
        "://cdn.embedly.com/widgets/platform.js";
      var s = d.getElementsByTagName(n)[0];
      s.parentNode.insertBefore(e, s);
    }
  })(window, document);
</script>
